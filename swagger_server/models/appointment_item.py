# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AppointmentItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: str=None, start_date: datetime=None):  # noqa: E501
        """AppointmentItem - a model defined in Swagger

        :param user_id: The user_id of this AppointmentItem.  # noqa: E501
        :type user_id: str
        :param start_date: The start_date of this AppointmentItem.  # noqa: E501
        :type start_date: datetime
        """
        self.swagger_types = {
            'user_id': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'user_id': 'userId',
            'start_date': 'startDate'
        }
        self._user_id = user_id
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt) -> 'AppointmentItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppointmentItem of this AppointmentItem.  # noqa: E501
        :rtype: AppointmentItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this AppointmentItem.


        :return: The user_id of this AppointmentItem.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this AppointmentItem.


        :param user_id: The user_id of this AppointmentItem.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")  # noqa: E501

        self._user_id = user_id

    @property
    def start_date(self) -> datetime:
        """Gets the start_date of this AppointmentItem.


        :return: The start_date of this AppointmentItem.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: datetime):
        """Sets the start_date of this AppointmentItem.


        :param start_date: The start_date of this AppointmentItem.
        :type start_date: datetime
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")  # noqa: E501

        self._start_date = start_date
